node {
  catchError {
    def nexusRepo = 'https://www.silverpeas.org/nexus/content/repositories/builds'
    def gitRepo = 'https://github.com/Silverpeas/Silverpeas-Sso.git'
    def parentVersion
    def buildNumber
    def version
    docker.image("silverpeas/silverbuild")
        .inside('-u root -v $HOME/.m2/settings.xml:/root/.m2/settings.xml -v $HOME/.m2/settings-security.xml:/root/.m2/settings-security.xml -v $HOME/.gitconfig:/root/.gitconfig -v $HOME/.ssh:/root/.ssh -v $HOME/.gnupg:/root/.gnupg') {
      stage('Preparation') {
        buildNumber = (new Date()).format('yyMMdd')
        echo "Prepare the build ${buildNumber} of Silverpeas SSO..."
        copyArtifacts projectName: 'Silverpeas_Project_Definition_AutoDeploy',
            filter: 'org/silverpeas/silverpeas-project/*-build*/*.pom',
            flatten: true
        def files = findFiles glob: '*.pom'
        pom = readMavenPom file: files[0].path
        parentVersion = pom.version
        sh 'rm -rf *'
      }
      stage('Checkout') {
        git credentialsId: 'cacc0467-7c85-41d1-bf4e-eaa470dd5e59', poll: false, url: "${gitRepo}"
        def pom = readMavenPom()
        version = "${pom.properties['next.release']}-build${buildNumber}"
        sh "mvn -U versions:set -DgenerateBackupPoms=false -DnewVersion=${version}"
        if (pom.parent) {
          if (!pom.parent.version.matches(/[0-9.]+/) && pom.parent.version != parentVersion) {
            sh """
mvn -U versions:update-parent -DgenerateBackupPoms=false -DparentVersion=${parentVersion}
git commit -am "Update parent POM to version ${parentVersion}"
"""
            withCredentials([usernamePassword(credentialsId: 'cacc0467-7c85-41d1-bf4e-eaa470dd5e59',
                usernameVariable: 'USER', passwordVariable: 'PASSWORD')]) {
              sh "git push https://${USER}:${PASSWORD}@github.com/Silverpeas/${project} HEAD:${branch}"
            }
          } else if (pom.parent.version.contains('SNAPSHOT')) {
            error "The parent POM must be at a stable or a build version for this project to be deployed. Current version is ${pom.parent.version}"
          }
        }
      }
      stage('Build and Deploy') {
        sh "mvn clean deploy -DaltDeploymentRepository=silverpeas::default::${nexusRepo} -Pdeployment -Djava.awt.headless=true -Dcontext=ci"
      }
      stage('Archive Build Version') {
        sh """
echo "version: ${version}" > target/build.yaml
"""
        archiveArtifacts artifacts: 'target/build.yaml', fingerprint: true
      }
    }
  }
step([$class                  : 'Mailer',
      notifyEveryUnstableBuild: true,
      recipients              : "miguel.moquillon@silverpeas.org, yohann.chastagnier@silverpeas.org",
      sendToIndividuals       : true])
}

